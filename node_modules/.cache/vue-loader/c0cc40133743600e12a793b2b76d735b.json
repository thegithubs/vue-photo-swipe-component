{"remainingRequest":"D:\\app\\vue-photoswipe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\app\\vue-photoswipe\\src\\components\\photoSwipe.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\app\\vue-photoswipe\\src\\components\\photoSwipe.vue","mtime":1605512308819},{"path":"D:\\app\\vue-photoswipe\\node_modules\\babel-loader\\lib\\index.js","mtime":1605319488975},{"path":"D:\\app\\vue-photoswipe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605319463796},{"path":"D:\\app\\vue-photoswipe\\node_modules\\vue-loader\\lib\\index.js","mtime":1605319483898}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport '@/assets/css/photoswipe.css'\nimport '@/assets/css/default-skin.css'\nimport '@/assets/js/photoswipe.min'\nimport '@/assets/js/photoswipe-ui-default.min'\n\nexport default {\n  name: 'photoSwipe',\n  model: {\n    prop: 'modelPhotoSwipe',\n    event: 'close'\n  },\n  props: {\n    modelPhotoSwipe: {\n      type: Boolean,\n      default: false,\n    },\n    images: {\n      type: Array,\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => {}\n    },\n  },\n  data(){\n    return {\n      gallery: null,\n      baseOptions: {\n        spacing: 0,\n        focus: false,\n        zoomEl: false,\n        history: false,\n        shareEl: false,\n        arrowEl: false,\n        closeEl: false,\n        fullscreenEl: false,\n        closeOnScroll: false,\n        showAnimationDuration: 0,\n        hideAnimationDuration: 0,\n        tapToToggleControls: false,\n        clickToCloseNonZoomable: true,\n      },\n    }\n  },\n  mounted(){\n    this.init()\n  },\n  watch: {\n    modelPhotoSwipe(model) {\n      if (!model) return\n      this.init()\n      this.render()\n    },\n  },\n  methods: {\n    init(){\n      const pswpElement = document.querySelectorAll('.pswp')[0],\n        options = Object.assign(this.baseOptions, this.options)\n      this.images.forEach(i => {\n        const img = new Image()\n        img.src = i.src\n        if (img.complete) {\n          this.$set(i, 'w', img.width)\n          this.$set(i, 'h', img.height)\n        } else {\n          img.onload = () => {\n            this.$set(i, 'w', img.width)\n            this.$set(i, 'h', img.height)\n          }\n        }\n      })\n      this.gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, this.images, options)\n    },\n    render(){\n      this.$emit('init', this.gallery)\n      this.gallery.init()\n      this.closePhoto()\n    },\n    closePhoto(){\n      this.gallery.listen('close', () => {\n        this.value = false\n        this.$emit('close', this.value)\n      })\n    },\n    hide(e){\n      if (e.target.className !== 'pswp__img') this.gallery.close()\n    },\n    prev(){\n      this.gallery.prev()\n      setTimeout(() => {\n        this.gallery.ui.showControls()\n      }, 300)\n      this.$emit('prev')\n    },\n    next(){\n      this.gallery.next()\n      setTimeout(() => {\n        this.gallery.ui.showControls()\n      }, 300)\n      this.$emit('next')\n    }\n  }\n}\n",{"version":3,"sources":["photoSwipe.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"photoSwipe.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"photoSwipe\">\n    <!-- Root element of PhotoSwipe. Must have class pswp. -->\r\n    <div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n      <!-- Background of PhotoSwipe. \r\n           It's a separate element as animating opacity is faster than rgba(). -->\r\n      <div class=\"pswp__bg\"></div>\r\n      <!-- Slides wrapper with overflow:hidden. -->\r\n      <div class=\"pswp__scroll-wrap\">\r\n        <!-- Container that holds slides. \r\n            PhotoSwipe keeps only 3 of them in the DOM to save memory.\r\n            Don't modify these 3 pswp__item elements, data is added later on. -->\r\n        <div class=\"pswp__container\" @click=\"hide\">\r\n          <div class=\"pswp__item\"></div>\r\n          <div class=\"pswp__item\"></div>\r\n          <div class=\"pswp__item\"></div>\r\n        </div>\r\n        <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\r\n        <div class=\"pswp__ui pswp__ui--hidden\">\r\n          <div class=\"pswp__top-bar\">\r\n            <!--  Controls are self-explanatory. Order can be changed. -->\r\n            <div class=\"pswp__counter\"></div>\r\n            <button class=\"pswp__button pswp__button--close\"></button>\r\n            <button class=\"pswp__button pswp__button--share\"></button>\r\n            <button class=\"pswp__button pswp__button--fs\"></button>\r\n            <button class=\"pswp__button pswp__button--zoom\"></button>\r\n            \r\n            <!-- Preloader demo https://codepen.io/dimsemenov/pen/yyBWoR -->\r\n            <!-- element will get class pswp__preloader active when preloader is running -->\r\n            <div class=\"pswp__preloader\">\r\n              <div class=\"pswp__preloader__icn\">\r\n                <div class=\"pswp__preloader__cut\">\r\n                  <div class=\"pswp__preloader__donut\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\r\n            <div class=\"pswp__share-tooltip\"></div> \r\n          </div>\r\n          \r\n          <button class=\"pswp__button pswp__button--arrow--left\" v-if=\"!$slots.prev\"></button>\r\n          <div class=\"pswp__button--arrow--left pswp__prev\" @click=\"prev\" v-else>\r\n            <slot name=\"prev\"></slot>\r\n          </div>\r\n          \r\n          <button class=\"pswp__button pswp__button--arrow--right\" v-if=\"!$slots.next\"></button>\r\n          <div class=\"pswp__button--arrow--right pswp__next\" @click=\"next\" v-else>\r\n            <slot name=\"next\"></slot>\r\n          </div>\r\n          \r\n          <div class=\"pswp__caption\">\r\n            <div class=\"pswp__caption__center\"></div>\r\n          </div>\r\n        </div>\r\n        \r\n        <slot name=\"content\"></slot>\r\n        \r\n      </div>\r\n    </div>\n  </div>\n</template>\n\n<script>\r\n  import Vue from 'vue'\r\n  import '@/assets/css/photoswipe.css'\r\n  import '@/assets/css/default-skin.css'\r\n  import '@/assets/js/photoswipe.min'\r\n  import '@/assets/js/photoswipe-ui-default.min'\r\n  \n  export default {\n    name: 'photoSwipe',\r\n    model: {\r\n      prop: 'modelPhotoSwipe',\r\n      event: 'close'\r\n    },\r\n    props: {\r\n      modelPhotoSwipe: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n      images: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      options: {\r\n        type: Object,\r\n        default: () => {}\r\n      },\r\n    },\r\n    data(){\r\n      return {\r\n        gallery: null,\r\n        baseOptions: {\r\n          spacing: 0,\r\n          focus: false,\r\n          zoomEl: false,\r\n          history: false,\r\n          shareEl: false,\r\n          arrowEl: false,\r\n          closeEl: false,\r\n          fullscreenEl: false,\r\n          closeOnScroll: false,\r\n          showAnimationDuration: 0,\r\n          hideAnimationDuration: 0,\r\n          tapToToggleControls: false,\r\n          clickToCloseNonZoomable: true,\r\n        },\r\n      }\r\n    },\r\n    mounted(){\r\n      this.init()\r\n    },\r\n    watch: {\r\n      modelPhotoSwipe(model) {\r\n        if (!model) return\r\n        this.init()\r\n        this.render()\r\n      },\r\n    },\r\n    methods: {\r\n      init(){\r\n        const pswpElement = document.querySelectorAll('.pswp')[0],\r\n          options = Object.assign(this.baseOptions, this.options)\r\n        this.images.forEach(i => {\r\n          const img = new Image()\r\n          img.src = i.src\r\n          if (img.complete) {\r\n            this.$set(i, 'w', img.width)\r\n            this.$set(i, 'h', img.height)\r\n          } else {\r\n            img.onload = () => {\r\n              this.$set(i, 'w', img.width)\r\n              this.$set(i, 'h', img.height)\r\n            }\r\n          }\r\n        })\r\n        this.gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, this.images, options)\r\n      },\r\n      render(){\r\n        this.$emit('init', this.gallery)\r\n        this.gallery.init()\r\n        this.closePhoto()\r\n      },\r\n      closePhoto(){\r\n        this.gallery.listen('close', () => {\r\n          this.value = false\r\n          this.$emit('close', this.value)\r\n        })\r\n      },\r\n      hide(e){\r\n        if (e.target.className !== 'pswp__img') this.gallery.close()\r\n      },\r\n      prev(){\r\n        this.gallery.prev()\r\n        setTimeout(() => {\r\n          this.gallery.ui.showControls()\r\n        }, 300)\r\n        this.$emit('prev')\r\n      },\r\n      next(){\r\n        this.gallery.next()\r\n        setTimeout(() => {\r\n          this.gallery.ui.showControls()\r\n        }, 300)\r\n        this.$emit('next')\r\n      }\r\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\r\n  .pswp__prev {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 8px;\r\n    transform: translateY(-50%);\r\n    color: #fff;\r\n    z-index: 99;\r\n  }\r\n  .pswp__button--arrow--left.pswp__prev, .pswp__button--arrow--right.pswp__next {\r\n    margin-top: 0;\r\n    width: auto;\r\n    height: auto;\r\n  }\r\n  .pswp__button--arrow--left.pswp__prev:before, .pswp__button--arrow--right.pswp__next:before {\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n  .pswp__next {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 8px;\r\n    transform: translateY(-50%);\r\n    color: #fff;\r\n    z-index: 99;\r\n  }\r\n  \n</style>\n"]}]}